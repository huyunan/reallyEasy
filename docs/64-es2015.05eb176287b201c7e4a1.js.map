{"version":3,"sources":["webpack:///node_modules/_@ionic_core@5.5.1@@ionic/core/dist/esm/tap-click-71d2324a.js"],"names":["startTapClick","config","scrollingEl","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchEnd","ev","n","pointerUp","cancelActive","clearTimeout","undefined","removeActivated","pointerDown","parentElement","setActivatedElement","getActivatableTarget","el","x","y","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delete","delay","isInstant","ADD_ACTIVATED_DEFERS","remove","setTimeout","Date","now","add","rippleEffect","getRippleEffect","addRipple","removeRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","doc","document","addEventListener","target","t","composedPath","closest","path","i","length","shadowRoot","ripple","querySelector"],"mappings":"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","file":"x","sourcesContent":["import { n as now, p as pointerCoord } from './helpers-90f46169.js';\n\nconst startTapClick = (config) => {\n  let lastTouch = -MOUSE_WAIT * 10;\n  let lastActivated = 0;\n  let scrollingEl;\n  let activatableEle;\n  let activeRipple;\n  let activeDefer;\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  const clearDefers = new WeakMap();\n  const isScrolling = () => {\n    return scrollingEl !== undefined && scrollingEl.parentElement !== null;\n  };\n  // Touch Events\n  const onTouchStart = (ev) => {\n    lastTouch = now(ev);\n    pointerDown(ev);\n  };\n  const onTouchEnd = (ev) => {\n    lastTouch = now(ev);\n    pointerUp(ev);\n  };\n  const onMouseDown = (ev) => {\n    const t = now(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n  const onMouseUp = (ev) => {\n    const t = now(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerUp(ev);\n    }\n  };\n  const cancelActive = () => {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n  const pointerDown = (ev) => {\n    if (activatableEle || isScrolling()) {\n      return;\n    }\n    scrollingEl = undefined;\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n  const pointerUp = (ev) => {\n    setActivatedElement(undefined, ev);\n  };\n  const setActivatedElement = (el, ev) => {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    const { x, y } = pointerCoord(ev);\n    // deactivate selected\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n      removeActivated(true);\n    }\n    // activate\n    if (el) {\n      const deferId = clearDefers.get(el);\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(() => {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      }, delay);\n    }\n    activatableEle = el;\n  };\n  const addActivated = (el, x, y) => {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    const rippleEffect = useRippleEffect && getRippleEffect(el);\n    if (rippleEffect && rippleEffect.addRipple) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n  const removeRipple = () => {\n    if (activeRipple !== undefined) {\n      activeRipple.then(remove => remove());\n      activeRipple = undefined;\n    }\n  };\n  const removeActivated = (smooth) => {\n    removeRipple();\n    const active = activatableEle;\n    if (!active) {\n      return;\n    }\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n    if (smooth && time > 0 && !isInstant(active)) {\n      const deferId = setTimeout(() => {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    }\n    else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n  const doc = document;\n  doc.addEventListener('ionScrollStart', ev => {\n    scrollingEl = ev.target;\n    cancelActive();\n  });\n  doc.addEventListener('ionScrollEnd', () => {\n    scrollingEl = undefined;\n  });\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n};\nconst getActivatableTarget = (ev) => {\n  if (ev.composedPath) {\n    const path = ev.composedPath();\n    for (let i = 0; i < path.length - 2; i++) {\n      const el = path[i];\n      if (el.classList && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  }\n  else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\nconst isInstant = (el) => {\n  return el.classList.contains('ion-activatable-instant');\n};\nconst getRippleEffect = (el) => {\n  if (el.shadowRoot) {\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n    if (ripple) {\n      return ripple;\n    }\n  }\n  return el.querySelector('ion-ripple-effect');\n};\nconst ACTIVATED = 'ion-activated';\nconst ADD_ACTIVATED_DEFERS = 200;\nconst CLEAR_STATE_DEFERS = 200;\nconst MOUSE_WAIT = 2500;\n\nexport { startTapClick };\n"]}