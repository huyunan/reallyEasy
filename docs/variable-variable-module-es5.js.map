{"version":3,"sources":["webpack:///node_modules/_camel-case@4.1.1@camel-case/dist.es2015/index.js","webpack:///node_modules/_lower-case@2.0.1@lower-case/dist.es2015/index.js","webpack:///node_modules/_no-case@3.0.3@no-case/dist.es2015/index.js","webpack:///node_modules/_pascal-case@3.1.1@pascal-case/dist.es2015/index.js","webpack:///node_modules/_text-constant-case@1.0.2@text-constant-case/dist.es2015/index.js","webpack:///node_modules/_text-dot-case@1.0.2@text-dot-case/dist.es2015/index.js","webpack:///node_modules/_text-lower-case@1.0.4@text-lower-case/dist.es2015/index.js","webpack:///node_modules/_text-no-case@1.0.2@text-no-case/dist.es2015/index.js","webpack:///node_modules/_text-param-case@1.0.2@text-param-case/dist.es2015/index.js","webpack:///node_modules/_text-upper-case@1.0.2@text-upper-case/dist.es2015/index.js","webpack:///src/app/easy/variable/variable.module.ts","webpack:///src/app/easy/variable/variable.page.ts","webpack:///src/app/easy/variable/variable.page.html"],"names":["camelCaseTransform","input","index","toLowerCase","camelCaseTransformMerge","camelCase","options","transform","SUPPORTED_LOCALE","tr","regexp","map","İ","I","İ","az","lt","J","Į","Ì","Í","Ĩ","localeLowerCase","str","locale","lang","lowerCase","replace","m","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","noCase","_a","splitRegexp","_b","stripRegexp","_c","_d","delimiter","result","start","end","length","charAt","slice","split","join","re","value","RegExp","reduce","pascalCaseTransform","firstChar","lowerChars","substr","toUpperCase","pascalCaseTransformMerge","pascalCase","__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","constantCase","dotCase","paramCase","i̇","j̇","į̇","i̇̀","i̇́","i̇̃","localeUpperCase","upperCase","VariablePageModule","forChild","path","component","imports","declarations","VariablePage","rows","variableValue","errorMessage","type_select","successMessage","format_types","name","nullCheck","error","message","clipboard","trim","ionFocus","unixs","wins","values","replaceValue","filter","a","forEach","b","format","copy","clear","selector","templateUrl","styleUrls"],"mappings":"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","file":"variable-variable-module-es5.js","sourcesContent":["import { __assign } from \"tslib\";\nimport { pascalCase, pascalCaseTransform, pascalCaseTransformMerge } from \"pascal-case\";\nexport function camelCaseTransform(input, index) {\n    if (index === 0)\n        return input.toLowerCase();\n    return pascalCaseTransform(input, index);\n}\nexport function camelCaseTransformMerge(input, index) {\n    if (index === 0)\n        return input.toLowerCase();\n    return pascalCaseTransformMerge(input);\n}\nexport function camelCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return pascalCase(input, __assign({ transform: camelCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\"\n        }\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\"\n        }\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\"\n        }\n    }\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result\n        .slice(start, end)\n        .split(\"\\0\")\n        .map(transform)\n        .join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n    var firstChar = input.charAt(0);\n    var lowerChars = input.substr(1).toLowerCase();\n    if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n        return \"_\" + firstChar + lowerChars;\n    }\n    return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"\", transform: pascalCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { noCase } from \"text-no-case\";\nimport { upperCase } from \"text-upper-case\";\nexport function constantCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"_\", transform: upperCase }, options));\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { noCase } from \"text-no-case\";\nexport function dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n","import { lowerCase } from \"text-lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize text into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { dotCase } from \"text-dot-case\";\nexport function paramCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign({ delimiter: \"-\" }, options));\n}\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /[\\u0069]/g,\n        map: {\n            i: \"\\u0130\",\n        },\n    },\n    az: {\n        regexp: /[\\u0069]/g,\n        map: {\n            i: \"\\u0130\",\n        },\n    },\n    lt: {\n        regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n        map: {\n            i̇: \"\\u0049\",\n            j̇: \"\\u004A\",\n            į̇: \"\\u012E\",\n            i̇̀: \"\\u00CC\",\n            i̇́: \"\\u00CD\",\n            i̇̃: \"\\u0128\",\n        },\n    },\n};\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return upperCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return upperCase(str);\n}\n/**\n * Upper case as a function.\n */\nexport function upperCase(str) {\n    return str.toUpperCase();\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VariablePage } from './variable.page';\r\nimport { HeaderPageModule } from '../header/header.module';\r\nimport { FooterPageModule } from '../footer/footer.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HeaderPageModule,\r\n    FooterPageModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: VariablePage,\r\n      }\r\n    ]),\r\n    IonicModule\r\n  ],\r\n  declarations: [VariablePage]\r\n})\r\nexport class VariablePageModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { paramCase } from \"text-param-case\";\r\nimport { constantCase } from \"text-constant-case\";\r\nimport { camelCase } from \"camel-case\";\r\n\r\n@Component({\r\n  selector: \"app-variable\",\r\n  templateUrl: \"variable.page.html\",\r\n  styleUrls: [\"variable.page.scss\"],\r\n})\r\nexport class VariablePage {\r\n  // json文本框显示行数\r\n  rows = 20;\r\n  // json文本框值\r\n  variableValue = \"\";\r\n  errorMessage = \"\";\r\n  type_select = \"\";\r\n  successMessage = \"\";\r\n  format_types = [\r\n    // Transform into a string with the separator denoted by the next word capitalized.\r\n    {\r\n      value: \"camel\",\r\n      name: \"驼峰命名 testString\",\r\n    },\r\n    // Transform into upper case string with an underscore between words.\r\n    {\r\n      value: \"constant\",\r\n      name: \"下划线命名 TEST_STRING\",\r\n    },\r\n    // Transform into a lower cased string with dashes between words.\r\n    {\r\n      value: \"param\",\r\n      name: \"中横杠命名 test-string\",\r\n    },\r\n    // Transforms the string to lower case.\r\n    {\r\n      value: \"lower\",\r\n      name: \"小写命名 test string\",\r\n    },\r\n    // Transforms the string to upper case.\r\n    {\r\n      value: \"upper\",\r\n      name: \"大写命名 TEST STRING\",\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  // 格式化\r\n  format() {\r\n    if (this.nullCheck()) return;\r\n    try {\r\n      switch (this.type_select) {\r\n        case \"camel\":\r\n          this.variableValue = camelCase(this.variableValue);\r\n          break;\r\n        case \"constant\":\r\n          this.variableValue = constantCase(this.variableValue);\r\n          break;\r\n        case \"param\":\r\n          this.variableValue = paramCase(this.variableValue);\r\n          break;\r\n        case \"lower\":\r\n          this.variableValue = this.variableValue.toLowerCase();\r\n          break;\r\n        case \"upper\":\r\n          this.variableValue = this.variableValue.toUpperCase();\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      this.errorMessage = \"\";\r\n      this.successMessage = \"格式化完成\";\r\n    } catch (error) {\r\n      this.successMessage = \"\";\r\n      this.errorMessage = error.message;\r\n    }\r\n  }\r\n\r\n  // 复制\r\n  copy() {\r\n    if (this.nullCheck()) return;\r\n    const clipboard = require(\"copy-to-clipboard\");\r\n    clipboard(this.variableValue.trim());\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"复制完成\";\r\n  }\r\n\r\n  // 清空\r\n  clear() {\r\n    if (this.nullCheck()) return;\r\n    this.variableValue = \"\";\r\n    this.ionFocus();\r\n  }\r\n\r\n  // json 输入值变更\r\n  ionFocus() {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  // 空 check\r\n  nullCheck() {\r\n    if (this.variableValue.trim() === \"\") {\r\n      this.successMessage = \"\";\r\n      this.errorMessage = \"请输入需要转换的json字符串!\";\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // 值替换\r\n  replace(value: string) {\r\n    const unixs = value.split(\"\\n\");\r\n    const wins = value.split(\"\\r\\n\");\r\n    let values = [];\r\n    if (unixs.length > wins.length) {\r\n      values = unixs;\r\n    } else {\r\n      values = wins;\r\n    }\r\n    let replaceValue = \"\";\r\n    values\r\n      .filter((a: string) => a.trim() !== \"\")\r\n      .forEach((b: string) => {\r\n        if (replaceValue === \"\") {\r\n          replaceValue += '(\"' + b + '\"';\r\n        } else {\r\n          replaceValue += ', \"' + b + '\"';\r\n        }\r\n      });\r\n    return replaceValue + \")\";\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-select interface=\"popover\" placeholder=\"请选择转换形式\" [(ngModel)]=\"type_select\">\r\n          <ng-container *ngFor=\"let type of format_types\">\r\n            <ion-select-option [value]=\"type.value\">{{type.name}}</ion-select-option>\r\n          </ng-container>\r\n        </ion-select>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-item class=\"easy-ion-item\">\r\n          <ion-textarea id=\"easy-json-textarea\" placeholder=\"请输入需要转换的变量...\" (ionFocus)=\"ionFocus()\" autofocus=\"true\"\r\n            inputmode=\"text\" [rows]=\"rows\" [(ngModel)]=\"variableValue\"></ion-textarea>\r\n        </ion-item>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button (click)=\"format()\">格式化</ion-button>\r\n        <ion-button (click)=\"copy()\" color=\"success\">复制</ion-button>\r\n        <ion-button (click)=\"clear()\" color=\"danger\">清空</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <pre *ngIf=\"errorMessage !== ''\" class=\"easy-error-block\">{{ errorMessage }}</pre>\r\n        <pre *ngIf=\"successMessage !== ''\" class=\"easy-success-block\">{{ successMessage }}</pre>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n  <app-footer></app-footer>\r\n</ion-content>"]}