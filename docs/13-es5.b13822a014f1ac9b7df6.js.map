{"version":3,"sources":["webpack:///src/app/easy/json/json.page.html","webpack:///src/app/easy/json/json.page.ts","webpack:///src/app/easy/json/json.module.ts"],"names":["JsonPage","JsonPageModule","rows","jsonValue","errorMessage","successMessage","this","nullCheck","jsonFormat","JSON","parse","type","size","error","message","fileName","Date","now","FileSaver","file","File","saveAs","ionFocus","trim","format","copy","save","clear","forChild","path","component"],"mappings":"ugBAqBQ,gBAA0D,QAAkB,Q,kBAAlB,8B,yBAC1D,gBAA8D,QAAoB,Q,kBAApB,gCCd/D,IAAMA,ECiBAC,EDjBN,IAAMD,EAAN,WAQL,aAAa,UANb,KAAAE,KAAO,GAEP,KAAAC,UAAY,GACZ,KAAAC,aAAe,GACf,KAAAC,eAAiB,G,UANZ,O,EAAA,G,EAAA,gCAYH,IAAGC,KAAKC,YAAR,CACA,IAAMC,EAAa,EAAQ,QAM3B,IACEF,KAAKH,UAAYK,EAAWC,KAAKC,MAAMJ,KAAKH,WAL/B,CACbQ,KAAM,QACNC,KAAM,IAINN,KAAKF,aAAe,GACpBE,KAAKD,eAAiB,iCACtB,MAAOQ,GACPP,KAAKD,eAAiB,GACtBC,KAAKF,aAAeS,EAAMC,YAzBzB,6BA+BAR,KAAKC,cACU,EAAQ,OAAR,CACRD,KAAKH,WACfG,KAAKF,aAAe,GACpBE,KAAKD,eAAiB,8BAnCnB,6BAwCH,IAAGC,KAAKC,YAAR,CACA,IACMQ,EAAW,cADA,YAAWC,KAAKC,MAAO,aAAc,MACV,QACtCC,EAAY,EAAQ,QACpBC,EAAO,IAAIC,KAAK,CAACd,KAAKH,WAAYY,EAAU,CAACJ,KAAM,6BACzDO,EAAUG,OAAOF,MA7Cd,8BAkDAb,KAAKC,cACRD,KAAKH,UAAY,GACjBG,KAAKgB,cApDF,iCAyDHhB,KAAKF,aAAe,GACpBE,KAAKD,eAAiB,KA1DnB,kCA+DH,MAA8B,KAA1BC,KAAKH,UAAUoB,SACjBjB,KAAKD,eAAiB,GACtBC,KAAKF,aAAe,mF,2BAjEnB,M,oCAAMJ,I,uBAAAA,EAAQ,mgBDRrB,qBACA,wBACE,mBACE,kBACE,kBACE,qBACE,yBAAuE,mCAAY,EAAAsB,aAAZ,CAAuB,qDACtD,OAC1C,OACF,OACF,OACA,kBACE,kBACE,uBAAY,gCAAS,EAAAE,YAAU,8BAAG,OAClC,wBAAY,gCAAS,EAAAC,UAAwB,wBAAE,OAC/C,wBAAY,gCAAS,EAAAC,UAAwB,oCAAI,OACjD,wBAAY,gCAAS,EAAAC,WAAwB,wBAAE,OACjD,OACF,OACA,mBACE,mBACE,uBACA,uBACF,OACF,OACF,OACA,sBACF,Q,MA1Ba,8BAMD,4BAAa,uBAcZ,0CACA,6C,ugCEGN,IAAM1B,EAAN,yB,qBAAMA,I,oDAAAA,IAAc,SAfhB,CACP,IACA,IACA,IACA,IACA,IACA,IAAa2B,SAAS,CACpB,CACEC,KAAM,GACNC,UAAW,S","file":"x","sourcesContent":["<app-header></app-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-item class=\"easy-ion-item\">\r\n          <ion-textarea id=\"easy-json-textarea\" placeholder=\"请输入需要转换的json字符串...\" (ionFocus)=\"ionFocus()\" autofocus=\"true\" inputmode=\"text\"\r\n            [rows]=\"rows\" [(ngModel)]=\"jsonValue\"></ion-textarea>\r\n        </ion-item>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button (click)=\"format()\">格式化</ion-button>\r\n        <ion-button (click)=\"copy()\" color=\"success\">复制</ion-button>\r\n        <ion-button (click)=\"save()\" color=\"success\">保存文件</ion-button>\r\n        <ion-button (click)=\"clear()\" color=\"danger\">清空</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <pre *ngIf=\"errorMessage !== ''\" class=\"easy-error-block\">{{ errorMessage }}</pre>\r\n        <pre *ngIf=\"successMessage !== ''\" class=\"easy-success-block\">{{ successMessage }}</pre>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n  <app-footer></app-footer>\r\n</ion-content>","import { Component } from '@angular/core';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-json',\r\n  templateUrl: 'json.page.html',\r\n  styleUrls: ['json.page.scss'],\r\n})\r\nexport class JsonPage {\r\n  // json文本框显示行数\r\n  rows = 20;\r\n  // json文本框值\r\n  jsonValue = '';\r\n  errorMessage = '';\r\n  successMessage = '';\r\n\r\n  constructor() {}\r\n\r\n  // 格式化\r\n  format() {\r\n    if(this.nullCheck()) return;\r\n    const jsonFormat = require('json-format');\r\n    /* using indent with spaces */\r\n    const config = {\r\n      type: 'space',\r\n      size: 2\r\n    };\r\n    try {\r\n      this.jsonValue = jsonFormat(JSON.parse(this.jsonValue), config);\r\n      this.errorMessage = '';\r\n      this.successMessage = '格式化完成';\r\n    } catch (error) {\r\n      this.successMessage = '';\r\n      this.errorMessage = error.message;\r\n    }\r\n  }\r\n\r\n  // 复制\r\n  copy() {\r\n    if(this.nullCheck()) return;\r\n    const clipboard = require('copy-to-clipboard');\r\n    clipboard(this.jsonValue);\r\n    this.errorMessage = '';\r\n    this.successMessage = '复制完成';\r\n  }\r\n\r\n  // 保存文件\r\n  save() {\r\n    if(this.nullCheck()) return;\r\n    const datetime = formatDate(Date.now(), 'MMddHHmmss', 'zh');\r\n    const fileName = 'reallyEasy_' + datetime + '.json';\r\n    const FileSaver = require('file-saver');\r\n    const file = new File([this.jsonValue], fileName, {type: \"text/plain;charset=utf-8\"});\r\n    FileSaver.saveAs(file);\r\n  }\r\n\r\n  // 清空\r\n  clear() {\r\n    if(this.nullCheck()) return;\r\n    this.jsonValue = '';\r\n    this.ionFocus();\r\n  }\r\n\r\n  // json 输入值变更\r\n  ionFocus() {\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n  }\r\n\r\n  // 空 check\r\n  nullCheck() {\r\n    if (this.jsonValue.trim() === '') {\r\n      this.successMessage = '';\r\n      this.errorMessage = '请输入需要转换的json字符串!';\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { JsonPage } from './json.page';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HeaderPageModule } from '../header/header.module';\r\nimport { FooterPageModule } from '../footer/footer.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HeaderPageModule,\r\n    FooterPageModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: JsonPage,\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [JsonPage]\r\n})\r\nexport class JsonPageModule { }\r\n"]}