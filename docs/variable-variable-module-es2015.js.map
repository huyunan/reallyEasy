{"version":3,"sources":["./node_modules/_camel-case@4.1.1@camel-case/dist.es2015/index.js","./node_modules/_lower-case@2.0.1@lower-case/dist.es2015/index.js","./node_modules/_no-case@3.0.3@no-case/dist.es2015/index.js","./node_modules/_pascal-case@3.1.1@pascal-case/dist.es2015/index.js","./node_modules/_text-constant-case@1.0.2@text-constant-case/dist.es2015/index.js","./node_modules/_text-dot-case@1.0.2@text-dot-case/dist.es2015/index.js","./node_modules/_text-lower-case@1.0.4@text-lower-case/dist.es2015/index.js","./node_modules/_text-no-case@1.0.2@text-no-case/dist.es2015/index.js","./node_modules/_text-param-case@1.0.2@text-param-case/dist.es2015/index.js","./node_modules/_text-upper-case@1.0.2@text-upper-case/dist.es2015/index.js","./src/app/easy/variable/variable.module.ts","./src/app/easy/variable/variable.page.ts","./src/app/easy/variable/variable.page.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACuD;AACjF;AACP;AACA;AACA,WAAW,uEAAmB;AAC9B;AACO;AACP;AACA;AACA,WAAW,4EAAwB;AACnC;AACO;AACP,6BAA6B,cAAc;AAC3C,WAAW,8DAAU,QAAQ,sDAAQ,EAAE,gCAAgC;AACvE;AACA,iC;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,gEAAgE,oBAAoB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iC;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,cAAc;AAC3C,kOAAkO,oDAAS;AAC3O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iCAAiC,EAAE;AAC9E;AACA,iC;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACA;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP,6BAA6B,cAAc;AAC3C,WAAW,sDAAM,QAAQ,sDAAQ,EAAE,gDAAgD;AACnF;AACA,iC;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;AACM;AACrC;AACP,6BAA6B,cAAc;AAC3C,WAAW,2DAAM,kBAAkB,4BAA4B,yDAAS,EAAE;AAC1E;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;AAC/B;AACP,6BAA6B,cAAc;AAC3C,WAAW,2DAAM,kBAAkB,iBAAiB;AACpD;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,gEAAgE,oBAAoB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,cAAc;AAC3C,kOAAkO,yDAAS;AAC3O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iCAAiC,EAAE;AAC9E;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACjC;AACP,6BAA6B,cAAc;AAC3C,WAAW,6DAAO,kBAAkB,iBAAiB;AACrD;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,gEAAgE,oBAAoB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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","file":"variable-variable-module-es2015.js","sourcesContent":["import { __assign } from \"tslib\";\nimport { pascalCase, pascalCaseTransform, pascalCaseTransformMerge } from \"pascal-case\";\nexport function camelCaseTransform(input, index) {\n    if (index === 0)\n        return input.toLowerCase();\n    return pascalCaseTransform(input, index);\n}\nexport function camelCaseTransformMerge(input, index) {\n    if (index === 0)\n        return input.toLowerCase();\n    return pascalCaseTransformMerge(input);\n}\nexport function camelCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return pascalCase(input, __assign({ transform: camelCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\"\n        }\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\"\n        }\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\"\n        }\n    }\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result\n        .slice(start, end)\n        .split(\"\\0\")\n        .map(transform)\n        .join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function pascalCaseTransform(input, index) {\n    var firstChar = input.charAt(0);\n    var lowerChars = input.substr(1).toLowerCase();\n    if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n        return \"_\" + firstChar + lowerChars;\n    }\n    return \"\" + firstChar.toUpperCase() + lowerChars;\n}\nexport function pascalCaseTransformMerge(input) {\n    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\nexport function pascalCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"\", transform: pascalCaseTransform }, options));\n}\n//# sourceMappingURL=index.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { noCase } from \"text-no-case\";\nimport { upperCase } from \"text-upper-case\";\nexport function constantCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \"_\", transform: upperCase }, options));\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { noCase } from \"text-no-case\";\nexport function dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n","import { lowerCase } from \"text-lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize text into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { dotCase } from \"text-dot-case\";\nexport function paramCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign({ delimiter: \"-\" }, options));\n}\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /[\\u0069]/g,\n        map: {\n            i: \"\\u0130\",\n        },\n    },\n    az: {\n        regexp: /[\\u0069]/g,\n        map: {\n            i: \"\\u0130\",\n        },\n    },\n    lt: {\n        regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n        map: {\n            i̇: \"\\u0049\",\n            j̇: \"\\u004A\",\n            į̇: \"\\u012E\",\n            i̇̀: \"\\u00CC\",\n            i̇́: \"\\u00CD\",\n            i̇̃: \"\\u0128\",\n        },\n    },\n};\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return upperCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return upperCase(str);\n}\n/**\n * Upper case as a function.\n */\nexport function upperCase(str) {\n    return str.toUpperCase();\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VariablePage } from './variable.page';\r\nimport { HeaderPageModule } from '../header/header.module';\r\nimport { FooterPageModule } from '../footer/footer.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HeaderPageModule,\r\n    FooterPageModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: VariablePage,\r\n      }\r\n    ]),\r\n    IonicModule\r\n  ],\r\n  declarations: [VariablePage]\r\n})\r\nexport class VariablePageModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { paramCase } from \"text-param-case\";\r\nimport { constantCase } from \"text-constant-case\";\r\nimport { camelCase } from \"camel-case\";\r\n\r\n@Component({\r\n  selector: \"app-variable\",\r\n  templateUrl: \"variable.page.html\",\r\n  styleUrls: [\"variable.page.scss\"],\r\n})\r\nexport class VariablePage {\r\n  // json文本框显示行数\r\n  rows = 20;\r\n  // json文本框值\r\n  variableValue = \"\";\r\n  errorMessage = \"\";\r\n  type_select = \"\";\r\n  successMessage = \"\";\r\n  format_types = [\r\n    // Transform into a string with the separator denoted by the next word capitalized.\r\n    {\r\n      value: \"camel\",\r\n      name: \"驼峰命名 testString\",\r\n    },\r\n    // Transform into upper case string with an underscore between words.\r\n    {\r\n      value: \"constant\",\r\n      name: \"下划线命名 TEST_STRING\",\r\n    },\r\n    // Transform into a lower cased string with dashes between words.\r\n    {\r\n      value: \"param\",\r\n      name: \"中横杠命名 test-string\",\r\n    },\r\n    // Transforms the string to lower case.\r\n    {\r\n      value: \"lower\",\r\n      name: \"小写命名 test string\",\r\n    },\r\n    // Transforms the string to upper case.\r\n    {\r\n      value: \"upper\",\r\n      name: \"大写命名 TEST STRING\",\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  // 格式化\r\n  format() {\r\n    if (this.nullCheck()) return;\r\n    try {\r\n      switch (this.type_select) {\r\n        case \"camel\":\r\n          this.variableValue = camelCase(this.variableValue);\r\n          break;\r\n        case \"constant\":\r\n          this.variableValue = constantCase(this.variableValue);\r\n          break;\r\n        case \"param\":\r\n          this.variableValue = paramCase(this.variableValue);\r\n          break;\r\n        case \"lower\":\r\n          this.variableValue = this.variableValue.toLowerCase();\r\n          break;\r\n        case \"upper\":\r\n          this.variableValue = this.variableValue.toUpperCase();\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      this.errorMessage = \"\";\r\n      this.successMessage = \"格式化完成\";\r\n    } catch (error) {\r\n      this.successMessage = \"\";\r\n      this.errorMessage = error.message;\r\n    }\r\n  }\r\n\r\n  // 复制\r\n  copy() {\r\n    if (this.nullCheck()) return;\r\n    const clipboard = require(\"copy-to-clipboard\");\r\n    clipboard(this.variableValue.trim());\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"复制完成\";\r\n  }\r\n\r\n  // 清空\r\n  clear() {\r\n    if (this.nullCheck()) return;\r\n    this.variableValue = \"\";\r\n    this.ionFocus();\r\n  }\r\n\r\n  // json 输入值变更\r\n  ionFocus() {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  // 空 check\r\n  nullCheck() {\r\n    if (this.variableValue.trim() === \"\") {\r\n      this.successMessage = \"\";\r\n      this.errorMessage = \"请输入需要转换的json字符串!\";\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // 值替换\r\n  replace(value: string) {\r\n    const unixs = value.split(\"\\n\");\r\n    const wins = value.split(\"\\r\\n\");\r\n    let values = [];\r\n    if (unixs.length > wins.length) {\r\n      values = unixs;\r\n    } else {\r\n      values = wins;\r\n    }\r\n    let replaceValue = \"\";\r\n    values\r\n      .filter((a: string) => a.trim() !== \"\")\r\n      .forEach((b: string) => {\r\n        if (replaceValue === \"\") {\r\n          replaceValue += '(\"' + b + '\"';\r\n        } else {\r\n          replaceValue += ', \"' + b + '\"';\r\n        }\r\n      });\r\n    return replaceValue + \")\";\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-select interface=\"popover\" placeholder=\"请选择转换形式\" [(ngModel)]=\"type_select\">\r\n          <ng-container *ngFor=\"let type of format_types\">\r\n            <ion-select-option [value]=\"type.value\">{{type.name}}</ion-select-option>\r\n          </ng-container>\r\n        </ion-select>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-item class=\"easy-ion-item\">\r\n          <ion-textarea id=\"easy-json-textarea\" placeholder=\"请输入需要转换的变量...\" (ionFocus)=\"ionFocus()\" autofocus=\"true\"\r\n            inputmode=\"text\" [rows]=\"rows\" [(ngModel)]=\"variableValue\"></ion-textarea>\r\n        </ion-item>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button (click)=\"format()\">格式化</ion-button>\r\n        <ion-button (click)=\"copy()\" color=\"success\">复制</ion-button>\r\n        <ion-button (click)=\"clear()\" color=\"danger\">清空</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n    <ion-row>\r\n      <ion-col>\r\n        <pre *ngIf=\"errorMessage !== ''\" class=\"easy-error-block\">{{ errorMessage }}</pre>\r\n        <pre *ngIf=\"successMessage !== ''\" class=\"easy-success-block\">{{ successMessage }}</pre>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n  <app-footer></app-footer>\r\n</ion-content>"],"sourceRoot":"webpack:///"}